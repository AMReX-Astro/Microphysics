@namespace: integrator

# these are the parameters for the integration module

# Normally we update the temperature during a burn to be consistent with
# the current internal energy. This is done with an EOS call, which can
# be turned off if desired. This will freeze the temperature and specific heat
# to the values at the beginning of the burn, which is inaccurate but cheaper.
call_eos_in_rhs          logical   .true.

# Allow the energy integration to be disabled by setting the RHS to zero.
integrate_energy         logical   .true.

# Whether to use an analytical or numerical Jacobian.
# 1 == Analytical
# 2 == Numerical
# 3 == Numerical for reactions; analytic for primitive -> conserved (simplified-SDC only)
jacobian                 integer   1

# Should we print out diagnostic output after the solve?
burner_verbose           logical   .false.

# Tolerances for the solver (relative and absolute), for the
# species and energy equations.
rtol_spec                real      1.d-12
rtol_enuc                real      1.d-6

atol_spec                real      1.d-8
atol_enuc                real      1.d-6

# Whether to renormalize the mass fractions at each step in the evolution
# so that they sum to unity.
renormalize_abundances   logical   .false.

# The absolute cutoff for species -- note that this might be larger
# than ``small_x``, but the issue is that we need to prevent underflow
# issues and keep mass fractions positive in the integrator.  You may
# have to increase the floor to, e.g. 1.d-20 if your rates are large.
SMALL_X_SAFE                 real            1.0d-30

# The maximum temperature for reactions in the integration.
MAX_TEMP                     real            1.0d11

# boost the reaction rates by a factor > 1
react_boost                 real         -1.d0

# maximum number of timesteps for the integrator
ode_max_steps              integer      150000

# maximum timestep for the integrator
ode_max_dt                 real         1.d30

# Whether to use Jacobian caching in VODE
use_jacobian_caching    logical   .true.

# Inputs for generating a Nonaka Plot (TM)
nonaka_i                integer           0
nonaka_j                integer           0
nonaka_k                integer           0
nonaka_level            integer           0
nonaka_file             character         "nonaka_plot.dat"

# in the clean_state process, do we clip the species such that they
# are in [0, 1]?
do_species_clip              integer          1

# flag for turning on the use of number densities for all species
use_number_densities     logical          .false.

# flag for tuning on the subtraction of internal energy
subtract_internal_energy   logical       .true.

# SDC iteration tolerance adjustment factor
sdc_burn_tol_factor          real         1.d0

# do we scale the ODE system we integrate to make it O(1)?
# for Strang, this simply means scaling e by the initial energy?
scale_system              integer         0

