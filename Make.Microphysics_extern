# This is the main include makefile for applications that want to use Microphysics
# You should set NETWORK_OUTPUT_PATH before including this file

ifeq ($(USE_SIMPLIFIED_SDC), TRUE)
  DEFINES += -DSIMPLIFIED_SDC
else ifeq ($(USE_TRUE_SDC), TRUE)
  DEFINES += -DTRUE_SDC
else
  DEFINES += -DSTRANG
endif

USE_NONAKA_PLOT ?= FALSE
ifeq ($(USE_NONAKA_PLOT),TRUE)
  DEFINES += -DNONAKA_PLOT
endif

SCREEN_METHOD ?= screen5
ifeq ($(SCREEN_METHOD), null)
  DEFINES += -DSCREEN_METHOD=0
else ifeq ($(SCREEN_METHOD), screen5)
  DEFINES += -DSCREEN_METHOD=1
else ifeq ($(SCREEN_METHOD), chugunov2007)
  DEFINES += -DSCREEN_METHOD=2
else ifeq ($(SCREEN_METHOD), chugunov2009)
  DEFINES += -DSCREEN_METHOD=3
else ifeq ($(SCREEN_METHOD), chabrier1998)
  DEFINES += -DSCREEN_METHOD=4
else
  $(error Invalid value for SCREEN_METHOD)
endif

ifeq ($(EOS_DIR), gamma_law_general)
  override EOS_DIR := gamma_law
  $(warning gamma_law_general has been renamed gamma_law)
endif


EOS_PATH := $(MICROPHYSICS_HOME)/EOS/$(strip $(EOS_DIR))
NETWORK_PATH := $(MICROPHYSICS_HOME)/networks/$(strip $(NETWORK_DIR))
ifeq ($(USE_CONDUCTIVITY), TRUE)
   CONDUCTIVITY_PATH := $(MICROPHYSICS_HOME)/conductivity/$(strip $(CONDUCTIVITY_DIR))
endif

# Problems can specify the input file for general_null by setting
# GENERAL_NET_INPUTS directly (full path) or just specifying the name
# of the inputs file as NETWORK_INPUTS and let us sort it out
ifndef GENERAL_NET_INPUTS
   ifneq "$(wildcard $(NETWORK_INPUTS))" ""
      GENERAL_NET_INPUTS := $(NETWORK_INPUTS)
   else
      GENERAL_NET_INPUTS := $(MICROPHYSICS_HOME)/networks/general_null/$(NETWORK_INPUTS)
   endif
endif

# electron capture tables
NET_TABLES = $(wildcard $(NETWORK_PATH)/*_betadecay.dat) $(wildcard $(NETWORK_PATH)/*_electroncapture.dat)

ifneq "$(NET_TABLES)" ""
  all: nettables
endif

nettables:
	@echo linking network data files...
	$(foreach t, $(NET_TABLES), $(shell if [ ! -f `basename $t` ]; then ln -s $(t) . ; fi))

EXTERN_CORE += $(EOS_HOME)
EXTERN_CORE += $(EOS_PATH)

# the helmholtz EOS has an include file -- also add a target to link
# the table into the problem directory.
ifeq ($(findstring helmholtz, $(EOS_DIR)), helmholtz)
   all: table
endif

table:
	@if [ ! -f helm_table.dat ]; then echo Linking helm_table.dat; ln -s $(EOS_PATH)/helm_table.dat .;  fi

# NSE networks need the table
ifeq ($(USE_NSE_TABLE),TRUE)
  NSE_TABULAR_HOME ?= $(MICROPHYSICS_HOME)/nse_tabular
  EXTERN_CORE += $(NSE_TABULAR_HOME)
  ifeq ($(findstring aprox19, $(NETWORK_DIR)), aprox19)
     all: nsetable
  endif
endif

nsetable:
	@if [ ! -f nse.tbl ]; then echo Linking nse.tbl; ln -s $(NETWORK_PATH)/nse.tbl .; fi


# include the network
EXTERN_CORE += $(NETWORK_PATH)


# Note that this should be located after the include of the EOS and
# Network includes since it has actions that depend on variables set
# there.

EXTERN_CORE += $(MICROPHYSICS_HOME)/EOS
EXTERN_CORE += $(MICROPHYSICS_HOME)/networks
EXTERN_CORE += $(MICROPHYSICS_HOME)/interfaces

# include the conductivity
ifeq ($(USE_CONDUCTIVITY),TRUE)
  DEFINES += -DCONDUCTIVITY
  EXTERN_CORE += $(CONDUCTIVITY_HOME)
  EXTERN_CORE += $(CONDUCTIVITY_PATH)
endif


ifeq ($(USE_RAD), TRUE)
   ifeq ($(Opacity_dir), null)
     $(error The null opacity directory has been removed, please update to rad_power_law)
   endif
   EXTERN_CORE += $(MICROPHYSICS_HOME)/opacity

   OPAC_PATH := $(MICROPHYSICS_HOME)/opacity/$(Opacity_dir)
   EXTERN_CORE += $(OPAC_PATH)
endif

# fundamental constants
EXTERN_CORE += $(MICROPHYSICS_HOME)/constants


# self-consistent NSE solver for a network
ifeq ($(USE_NSE_NET), TRUE)
     DEFINES += -DNSE_NET
     DEFINES += -DNSE

     EXTERN_CORE += $(MICROPHYSICS_HOME)/nse_solver
     EXTERN_CORE += $(MICROPHYSICS_HOME)/util/hybrj
endif

# we can't have both NSE solvers
ifeq ($(USE_NSE_TABLE), TRUE)
  ifeq ($(USE_NSE_NET), TRUE)
    $(error USE_NSE_TABLE and USE_NSE_NET cannot be used together)
  endif
endif

clean::
	@if [ -L helm_table.dat ]; then rm -f helm_table.dat; fi
	@if [ -L reaclib_rate_metadata.dat ]; then rm -f reaclib_rate_metadata.dat; fi
	@if [ ! -f nse19.tbl ]; then rm -f nse19.tbl; fi
	$(foreach t, $(NET_TABLES), $(shell if [ ! -L `basename $t` ]; then rm -f `basename $t` ; fi))
