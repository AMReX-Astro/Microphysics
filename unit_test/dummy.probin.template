! This module stores the runtime parameters.  The probin_init() routine is
! used to initialize the runtime parameters

! this version is a stub -- useful for when we only need a container for 
! parameters, but not for MAESTRO use.

module probin_module

  use bl_types

  implicit none

  private

  @@declarationsA@@


end module probin_module


module extern_probin_module

  use bl_types

  implicit none

  private

  @@declarationsB@@

end module extern_probin_module


module runtime_init_module

  use bl_types
  use bl_error_module
  use probin_module
  use extern_probin_module

  implicit none

  @@namelist@@

  private

  public :: probin

  public :: runtime_init, runtime_close, runtime_pretty_print

contains

  subroutine runtime_init(read_inputs_in)

    logical, intent(in), optional :: read_inputs_in

    integer :: farg, narg
    character(len=128) :: fname
    logical    :: lexist
    integer :: un

    logical :: read_inputs

    narg = command_argument_count()

    if (.not. present(read_inputs_in)) then
       read_inputs = .false.
    else
       read_inputs = read_inputs_in
    endif

    if (read_inputs) then
       farg = 1
       if ( narg >= 1 ) then
          call get_command_argument(farg, value = fname)
          inquire(file = fname, exist = lexist )
          if ( lexist ) then
             farg = farg + 1
             open(newunit=un, file = fname, status = 'old', action = 'read')
             read(unit=un, nml = probin)
             close(unit=un)
          else
             call bl_error("ERROR: inputs file does not exist")
          endif
       else
          call bl_error("ERROR: no inputs file specified")
       endif
    endif

    @@acc@@

  end subroutine runtime_init

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

  subroutine runtime_close()

    use probin_module

  end subroutine runtime_close

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  subroutine runtime_pretty_print(unit)

    use bl_constants_module
    use probin_module
    use extern_probin_module

    integer, intent(in) :: unit

    write (unit, *) "[*] indicates overridden default"

    @@printing@@

  end subroutine runtime_pretty_print


end module runtime_init_module
