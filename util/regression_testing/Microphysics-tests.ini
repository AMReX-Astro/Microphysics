[main]
testTopDir     = /home/testing/microphysics/
webTopDir      = /home/www/Microphysics/test-suite/test-suite-gfortran/

sourceTree = F_Src

suiteName = Microphysics

sub_title = gfortran version

goUpLink = 0

reportActiveTestsOnly = 1

FCOMP = gfortran
add_to_f_make_command = TEST=t

numMakeJobs = 4

purge_output = 1

summary_job_info_field1 = Network
summary_job_info_field2 = EOS
summary_job_info_field3 = Integrator

default_branch = development

# MPIcommand should use the placeholders:
#   @host@ to indicate where to put the hostname to run on
#   @nprocs@ to indicate where to put the number of processors
#   @command@ to indicate where to put the command to run
#
# only tests with useMPI = 1 will run in parallel
# nprocs is problem dependent and specified in the individual problem
# sections.

MPIcommand = mpiexec -n @nprocs@ @command@


# force double precision plotfiles regardless of what the inputs file says
globalAddToExecString = --single_prec_plotfiles F

# email
sendEmailWhenFail = 1
emailTo = castro-development@googlegroups.com
emailBody = Check http://bender.astro.sunysb.edu/Microphysics/test-suite/test-suite-gfortran/ for details


# slack
slack_post = 1
slack_webhookfile = /home/zingale/.slack.webhook
slack_channel = "#microphysics"
slack_username = "bender"


[BoxLib]
dir = /home/testing/microphysics/BoxLib/
branch = development


[source]
dir = /home/testing/microphysics/Microphysics/
branch = development


[test_react-3alpha_cago-VODE]
buildDir = unit_test/test_react/
inputFile = inputs_3alpha
aux1File = xin.3alpha_plus_o
aux2File = gr0_3d.small
dim = 3
link1File = helm_table.dat
useMPI = 0
useOMP = 1
numthreads = 4
addToCompileString = NETWORK_DIR=triple_alpha_plus_cago INTEGRATOR_DIR=VODE
compareFile = react_3alpha_test_react.VODE

[test_react-3alpha_cago-BS]
buildDir = unit_test/test_react/
inputFile = inputs_3alpha.BS
aux1File = xin.3alpha_plus_o
aux2File = gr0_3d.small
dim = 3
link1File = helm_table.dat
useMPI = 0
useOMP = 1
numthreads = 4
addToCompileString = NETWORK_DIR=triple_alpha_plus_cago INTEGRATOR_DIR=BS
compareFile = react_3alpha_test_react.BS

[test_react-ignition_simple-VODE]
buildDir = unit_test/test_react/
inputFile = inputs_ignition
aux1File = xin.ignition
aux2File = gr0_3d.small
dim = 3
link1File = helm_table.dat
useMPI = 0
useOMP = 1
numthreads = 4
addToCompileString = NETWORK_DIR=ignition_simple INTEGRATOR_DIR=VODE
compareFile = react_ignition_test_react.VODE

[test_react-ignition_simple-BS]
buildDir = unit_test/test_react/
inputFile = inputs_ignition.BS
aux1File = xin.ignition
aux2File = gr0_3d.small
dim = 3
link1File = helm_table.dat
useMPI = 0
useOMP = 1
numthreads = 4
addToCompileString = NETWORK_DIR=ignition_simple INTEGRATOR_DIR=BS
compareFile = react_ignition_test_react.BS

[test_react-ignition_chamulak-VODE]
buildDir = unit_test/test_react/
inputFile = inputs_ignition_chamulak
aux1File = xin.ignition
aux2File = gr0_3d.small
dim = 3
link1File = helm_table.dat
useMPI = 0
useOMP = 1
numthreads = 4
addToCompileString = NETWORK_DIR=ignition_chamulak INTEGRATOR_DIR=VODE
compareFile = react_ignition_chamulak_test_react.VODE

[test_react-ignition_chamulak-BS]
buildDir = unit_test/test_react/
inputFile = inputs_ignition_chamulak.BS
aux1File = xin.ignition
aux2File = gr0_3d.small
dim = 3
link1File = helm_table.dat
useMPI = 0
useOMP = 1
numthreads = 4
addToCompileString = NETWORK_DIR=ignition_chamulak INTEGRATOR_DIR=BS
compareFile = react_ignition_chamulak_test_react.BS

[test_react-xrb_simple-VODE]
buildDir = unit_test/test_react/
inputFile = inputs_xrb_simple
aux1File = xin.xrb_simple
aux2File = gr0_3d.small
dim = 3
link1File = helm_table.dat
useMPI = 0
useOMP = 1
numthreads = 4
addToCompileString = NETWORK_DIR=xrb_simple INTEGRATOR_DIR=VODE
compareFile = react_xrb_simple_test_react.VODE

[test_react-xrb_simple-BS]
buildDir = unit_test/test_react/
inputFile = inputs_xrb_simple
aux1File = xin.xrb_simple
aux2File = gr0_3d.small
dim = 3
link1File = helm_table.dat
useMPI = 0
useOMP = 1
numthreads = 4
addToCompileString = NETWORK_DIR=xrb_simple INTEGRATOR_DIR=BS
compareFile = react_xrb_simple_test_react.BS

[test_react-aprox13-VODE]
buildDir = unit_test/test_react/
inputFile = inputs_aprox13
aux1File = xin.aprox13
aux2File = gr0_3d.small
dim = 3
link1File = helm_table.dat
useMPI = 0
useOMP = 1
numthreads = 4
addToCompileString = NETWORK_DIR=aprox13 INTEGRATOR_DIR=VODE
compareFile = react_aprox13_test_react.VODE

[test_react-aprox13-BS]
buildDir = unit_test/test_react/
inputFile = inputs_aprox13
aux1File = xin.aprox13
aux2File = gr0_3d.small
dim = 3
link1File = helm_table.dat
useMPI = 0
useOMP = 1
numthreads = 4
addToCompileString = NETWORK_DIR=aprox13 INTEGRATOR_DIR=BS
compareFile = react_aprox13_test_react.BS

[test_react-aprox19-VODE]
buildDir = unit_test/test_react/
inputFile = inputs_aprox19
aux1File = xin.aprox19
aux2File = gr0_3d.small
dim = 3
link1File = helm_table.dat
useMPI = 0
useOMP = 1
numthreads = 4
addToCompileString = NETWORK_DIR=aprox19 INTEGRATOR_DIR=VODE
compareFile = react_aprox19_test_react.VODE

[test_react-aprox19-BS]
buildDir = unit_test/test_react/
inputFile = inputs_aprox19
aux1File = xin.aprox19
aux2File = gr0_3d.small
dim = 3
link1File = helm_table.dat
useMPI = 0
useOMP = 1
numthreads = 4
addToCompileString = NETWORK_DIR=aprox19 INTEGRATOR_DIR=BS
compareFile = react_aprox19_test_react.BS

[test_eos-helmholtz]
buildDir = unit_test/test_eos/
inputFile = input_eos
aux1File = gr0_3d.small
dim = 3
link1File = helm_table.dat
useMPI = 0
useOMP = 1
numthreads = 4
addToCompileString = EOS_DIR=helmholtz
compareFile = test_eos.helmholtz

[test_eos-gamma_law_general]
buildDir = unit_test/test_eos/
inputFile = input_eos
aux1File = gr0_3d.small
dim = 3
useMPI = 0
useOMP = 1
numthreads = 4
addToCompileString = EOS_DIR=gamma_law_general
compareFile = test_eos.gamma_law_general



