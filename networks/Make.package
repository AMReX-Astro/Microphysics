MICROPHYSICS_UTIL_PATH := $(MICROPHYSICS_HOME)/util

INCLUDE_LOCATIONS += $(MICROPHYSICS_UTIL_PATH)
VPATH_LOCATIONS   += $(MICROPHYSICS_UTIL_PATH)

include $(MICROPHYSICS_UTIL_PATH)/Make.package

ifeq ($(USE_REACT), TRUE)

  # for backwards compatibility
  DEFINES += -DNETWORK_HAS_CXX_IMPLEMENTATION

  ifeq ($(INTEGRATOR_DIR), VODE90)
    override INTEGRATOR_DIR = VODE
    $(warning VODE90 has been renamed VODE)
  endif

  ifeq ($(INTEGRATOR_DIR), VODE)
    ifeq ($(USE_CLEANED_CORRECTOR), TRUE)
      DEFINES += -DCLEAN_INTEGRATOR_CORRECTION
    endif
  endif

  VPATH_LOCATIONS += $(MICROPHYSICS_HOME)/networks

  CEXE_headers += rate_type.H

  CEXE_headers += rhs.H
  CEXE_sources += rhs.cpp

  # we need the actual integrator in the VPATH before the
  # integration/ dir to get overrides correct
  include $(MICROPHYSICS_HOME)/integration/Make.package

  INTEGRATION_PATH := $(MICROPHYSICS_HOME)/integration

  INCLUDE_LOCATIONS += $(INTEGRATION_PATH)
  VPATH_LOCATIONS   += $(INTEGRATION_PATH)
  EXTERN_CORE       += $(INTEGRATION_PATH)

endif

ifeq ($(USE_RATES), TRUE)

  DEFINES += -DRATES

  RATE_PATH := $(MICROPHYSICS_HOME)/rates

  INCLUDE_LOCATIONS += $(RATE_PATH)
  VPATH_LOCATIONS   += $(RATE_PATH)
  EXTERN_CORE       += $(RATE_PATH)

  include $(RATE_PATH)/Make.package

endif

ifeq ($(USE_SCREENING), TRUE)

  SCREEN_PATH := $(MICROPHYSICS_HOME)/screening

  INCLUDE_LOCATIONS += $(SCREEN_PATH)
  VPATH_LOCATIONS   += $(SCREEN_PATH)
  EXTERN_CORE       += $(SCREEN_PATH)

  include $(SCREEN_PATH)/Make.package

  DEFINES += -DSCREENING

endif

ifeq ($(USE_AUX_THERMO), TRUE)
  DEFINES += -DAUX_THERMO
endif

ifeq ($(USE_NSE_TABLE), TRUE)
  # note: NSE_THERMO is deprecated
  DEFINES += -DAUX_THERMO -DNSE_THERMO -DNSE_TABLE -DNSE

endif

ifeq ($(USE_NEUTRINOS), TRUE)

  NEUTRINO_PATH := $(MICROPHYSICS_HOME)/neutrinos

  INCLUDE_LOCATIONS += $(NEUTRINO_PATH)
  VPATH_LOCATIONS   += $(NEUTRINO_PATH)
  EXTERN_CORE       += $(NEUTRINO_PATH)

  include $(NEUTRINO_PATH)/Make.package

  DEFINES += -DNEUTRINOS

endif

NETWORK_OUTPUT_PATH ?= .

# for dependency resolution
AUTO_BUILD_SOURCES += $(NETWORK_OUTPUT_PATH)/network_properties.H

net_prop_debug: $(NETWORK_OUTPUT_PATH)/network_properties.H

ifneq ($(NETWORK_DIR), general_null)
  $(NETWORK_OUTPUT_PATH)/network_properties.F90: $(NETWORK_OUTPUT_PATH)/network_properties.H

  NAUX := $(shell PYTHONPATH=$(MICROPHYSICS_HOME)/networks/general_null $(MICROPHYSICS_HOME)/networks/get_naux.py --microphysics_path "$(MICROPHYSICS_HOME)" --defines "$(DEFINES)" --net "$(NETWORK_DIR)")
  DEFINES += "-DNAUX_NET=$(NAUX)"

$(NETWORK_OUTPUT_PATH)/network_properties.H:
	PYTHONPATH=$(MICROPHYSICS_HOME)/networks/general_null $(MICROPHYSICS_HOME)/networks/update_headers.py \
           --microphysics_path $(MICROPHYSICS_HOME) \
           --net $(NETWORK_DIR) \
           --odir $(NETWORK_OUTPUT_PATH) \
           --defines "$(DEFINES)"

endif
