! An automatically generated "null" network.  This provides the properties
! of a set of non-reacting species.
!
! network_name     -- a descriptive name of the network
!
! nspec            -- the number of species
!
! aion             -- atomic number
! zion             -- proton number
!
! spec_names       -- the name of the isotope
! short_spec_names -- an abbreviated form of the species name
!
!
! This module contains three routines:
!
!  network_init()        -- initialize the isotope properties
!
!  network_finalize()    -- finalize the network
!
!  network_species_index -- return the index of the species given its name
!

module network

  use bl_types

  implicit none

  integer, parameter :: nspec = @@NSPEC@@
  integer, parameter :: naux = 0

  character (len=16), save :: spec_names(nspec) 
  character (len= 5), save :: short_spec_names(nspec)
  character (len= 5), save :: short_spec_mesa(nspec)
  character (len= 5), save :: short_aux_names(naux)

  character (len=*), parameter :: network_name = @@NAME@@

  real(kind=dp_t), save :: aion(nspec), zion(nspec)

  logical, save :: network_initialized = .false.

  integer, pointer, save :: chem_id(:), net_iso(:)

contains
  
  subroutine network_init()

    @@SPEC_NAMES@@

    @@SHORT_SPEC_NAMES@@

    @@AION@@

    @@ZION@@

    call setup_mesa_net()

    network_initialized = .true.

  end subroutine network_init

  subroutine network_finalize()

    call shutdown_mesa_net()

  end subroutine network_finalize
  
  function network_species_index(name)

    character(len=*) :: name
    integer :: network_species_index, n

    network_species_index = -1

    do n = 1, nspec
       if (name == spec_names(n) .or. name == short_spec_names(n)) then
          network_species_index = n
          exit
       endif
    enddo
    
    return
  end function network_species_index

end module network
