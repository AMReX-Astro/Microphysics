#include <actual_network.H>


namespace network
{
    AMREX_GPU_MANAGED amrex::Array1D<amrex::Real, 1, NumSpec> bion;
    AMREX_GPU_MANAGED amrex::Array1D<amrex::Real, 1, NumSpec> mion;
}

#ifdef NSE_NET
namespace NSE_INDEX
{
    AMREX_GPU_MANAGED amrex::Array2D<int, 1, Rates::NumRates, 1, 7, Order::C> rate_indices {
        -1, 1, 3, -1, -1, 4, 102,
        -1, 2, 3, -1, -1, 6, 103,
        -1, 2, 5, -1, -1, 7, 104,
        -1, 2, 6, -1, -1, 8, 105,
        -1, 2, 7, -1, -1, 10, 107,
        -1, 2, 8, -1, -1, 12, 109,
        -1, 1, 9, -1, -1, 10, 106,
        -1, 1, 11, -1, -1, 12, 108,
        -1, 2, 12, -1, -1, 14, 111,
        -1, 1, 13, -1, -1, 14, 110,
        -1, 2, 14, -1, -1, 16, 113,
        -1, 1, 15, -1, -1, 16, 112,
        -1, 2, 20, -1, -1, 23, 115,
        -1, 1, 21, -1, -1, 23, 114,
        -1, 2, 21, -1, -1, 28, 116,
        -1, 2, 23, -1, -1, 31, 118,
        -1, 1, 28, -1, -1, 31, 117,
        -1, 2, 28, -1, -1, 34, 119,
        -1, 2, 31, -1, -1, 35, 121,
        -1, 1, 34, -1, -1, 35, 120,
        -1, 3, 3, -1, 1, 11, -1,
        -1, 3, 3, -1, 2, 8, -1,
        -1, 2, 4, -1, 1, 6, 123,
        -1, 3, 6, -1, 1, 13, -1,
        -1, 3, 6, -1, 2, 12, -1,
        -1, 6, 6, -1, 1, 15, -1,
        -1, 6, 6, -1, 2, 14, -1,
        -1, 2, 7, -1, 1, 9, 125,
        -1, 1, 11, -1, 2, 8, 124,
        -1, 1, 13, -1, 2, 12, 126,
        -1, 1, 15, -1, 2, 14, 127,
        -1, 2, 20, -1, 1, 21, 128,
        -1, 2, 23, -1, 1, 28, 129,
        -1, 1, 34, -1, 2, 31, 130,
        2, 2, 2, -1, -1, 3, 122,
        -1, 3, 3, -1, -1, 12, -1,
        -1, 6, 6, -1, -1, 16, -1,
        -1, 3, 6, -1, -1, 14, -1,
        -1, 1, 22, -1, -1, 27, 135,
        -1, 0, 23, -1, -1, 24, 131,
        -1, 0, 24, -1, -1, 25, 132,
        -1, 2, 24, -1, -1, 32, 143,
        -1, 0, 25, -1, -1, 26, 133,
        -1, 1, 25, -1, -1, 28, 136,
        -1, 2, 25, -1, -1, 33, 146,
        -1, 0, 26, -1, -1, 27, 134,
        -1, 1, 26, -1, -1, 29, 138,
        -1, 1, 27, -1, -1, 30, 140,
        -1, 0, 28, -1, -1, 29, 137,
        -1, 0, 29, -1, -1, 30, 139,
        -1, 1, 29, -1, -1, 32, 142,
        -1, 1, 30, -1, -1, 33, 145,
        -1, 0, 31, -1, -1, 32, 141,
        -1, 0, 32, -1, -1, 33, 144,
        -1, 1, 33, -1, -1, 34, 147,
        -1, 2, 21, -1, 1, 25, 150,
        -1, 2, 24, -1, 1, 29, 157,
        -1, 0, 26, -1, 1, 22, 148,
        -1, 0, 28, -1, 1, 26, 153,
        -1, 2, 28, -1, 1, 33, 161,
        -1, 0, 29, -1, 1, 27, 155,
        -1, 1, 30, -1, 2, 25, 152,
        -1, 0, 31, -1, 1, 29, 156,
        -1, 0, 31, -1, 2, 24, 149,
        -1, 0, 32, -1, 1, 30, 159,
        -1, 0, 32, -1, 2, 25, 151,
        -1, 0, 33, -1, 2, 26, 154,
        -1, 0, 34, -1, 2, 29, 158,
        -1, 0, 35, -1, 2, 32, 160,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, 28, -1, -1, 26, 86,
        -1, -1, 29, -1, -1, 27, 88,
        -1, -1, 29, -1, -1, 31, -1,
        -1, -1, 30, -1, -1, 32, -1,
        -1, -1, 26, -1, -1, 28, -1,
        -1, -1, 26, -1, -1, 22, 89,
        -1, -1, 27, -1, -1, 29, -1,
        -1, -1, 22, -1, -1, 26, -1,
        -1, -1, 31, -1, -1, 29, 84,
        -1, -1, 32, -1, -1, 30, 85,
        -1, -1, 0, -1, -1, 1, -1,
        -1, -1, 1, -1, -1, 0, -1,
        -1, 2, 16, -1, -1, 17, 95,
        -1, -1, 17, -1, 2, 16, -1,
        -1, 2, 17, -1, -1, 18, 97,
        -1, -1, 18, -1, 2, 17, -1,
        -1, 2, 18, -1, -1, 19, 99,
        -1, -1, 19, -1, 2, 18, -1,
        -1, 2, 19, -1, -1, 20, 101,
        -1, -1, 20, -1, 2, 19, -1,
        -1, -1, 4, -1, 1, 3, -1,
        -1, -1, 6, -1, 2, 3, -1,
        -1, -1, 7, -1, 2, 5, -1,
        -1, -1, 8, -1, 2, 6, -1,
        -1, -1, 10, -1, 1, 9, -1,
        -1, -1, 10, -1, 2, 7, -1,
        -1, -1, 12, -1, 1, 11, -1,
        -1, -1, 12, -1, 2, 8, -1,
        -1, -1, 14, -1, 1, 13, -1,
        -1, -1, 14, -1, 2, 12, -1,
        -1, -1, 16, -1, 1, 15, -1,
        -1, -1, 16, -1, 2, 14, -1,
        -1, -1, 23, -1, 1, 21, -1,
        -1, -1, 23, -1, 2, 20, -1,
        -1, -1, 28, -1, 2, 21, -1,
        -1, -1, 31, -1, 1, 28, -1,
        -1, -1, 31, -1, 2, 23, -1,
        -1, -1, 34, -1, 2, 28, -1,
        -1, -1, 35, -1, 1, 34, -1,
        -1, -1, 35, -1, 2, 31, -1,
        -1, -1, 3, 2, 2, 2, -1,
        -1, 1, 6, -1, 2, 4, -1,
        -1, 2, 8, -1, 1, 11, -1,
        -1, 1, 9, -1, 2, 7, -1,
        -1, 2, 12, -1, 1, 13, -1,
        -1, 2, 14, -1, 1, 15, -1,
        -1, 1, 21, -1, 2, 20, -1,
        -1, 1, 28, -1, 2, 23, -1,
        -1, 2, 31, -1, 1, 34, -1,
        -1, -1, 24, -1, 0, 23, -1,
        -1, -1, 25, -1, 0, 24, -1,
        -1, -1, 26, -1, 0, 25, -1,
        -1, -1, 27, -1, 0, 26, -1,
        -1, -1, 27, -1, 1, 22, -1,
        -1, -1, 28, -1, 1, 25, -1,
        -1, -1, 29, -1, 0, 28, -1,
        -1, -1, 29, -1, 1, 26, -1,
        -1, -1, 30, -1, 0, 29, -1,
        -1, -1, 30, -1, 1, 27, -1,
        -1, -1, 32, -1, 0, 31, -1,
        -1, -1, 32, -1, 1, 29, -1,
        -1, -1, 32, -1, 2, 24, -1,
        -1, -1, 33, -1, 0, 32, -1,
        -1, -1, 33, -1, 1, 30, -1,
        -1, -1, 33, -1, 2, 25, -1,
        -1, -1, 34, -1, 1, 33, -1,
        -1, 1, 22, -1, 0, 26, -1,
        -1, 2, 24, -1, 0, 31, -1,
        -1, 1, 25, -1, 2, 21, -1,
        -1, 2, 25, -1, 0, 32, -1,
        -1, 2, 25, -1, 1, 30, -1,
        -1, 1, 26, -1, 0, 28, -1,
        -1, 2, 26, -1, 0, 33, -1,
        -1, 1, 27, -1, 0, 29, -1,
        -1, 1, 29, -1, 0, 31, -1,
        -1, 1, 29, -1, 2, 24, -1,
        -1, 2, 29, -1, 0, 34, -1,
        -1, 1, 30, -1, 0, 32, -1,
        -1, 2, 32, -1, 0, 35, -1,
        -1, 1, 33, -1, 2, 28, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1,
        -1, -1, -1, -1, -1, -1, -1
    };
}
#endif

void actual_network_init()
{
    using namespace Species;
    using namespace network;

    // binding energies per nucleon in MeV
    amrex::Array1D<amrex::Real, 1, NumSpec> ebind_per_nucleon;

    ebind_per_nucleon(N) = 0.0_rt;
    ebind_per_nucleon(H1) = 0.0_rt;
    ebind_per_nucleon(He4) = 7.073915_rt;
    ebind_per_nucleon(C12) = 7.680144_rt;
    ebind_per_nucleon(N13) = 7.238863_rt;
    ebind_per_nucleon(N14) = 7.475613999999999_rt;
    ebind_per_nucleon(O16) = 7.976206_rt;
    ebind_per_nucleon(F18) = 7.631638_rt;
    ebind_per_nucleon(Ne20) = 8.03224_rt;
    ebind_per_nucleon(Ne21) = 7.971712999999999_rt;
    ebind_per_nucleon(Na22) = 7.915667_rt;
    ebind_per_nucleon(Na23) = 8.111493000000001_rt;
    ebind_per_nucleon(Mg24) = 8.260709_rt;
    ebind_per_nucleon(Al27) = 8.331553_rt;
    ebind_per_nucleon(Si28) = 8.447744_rt;
    ebind_per_nucleon(P31) = 8.481167_rt;
    ebind_per_nucleon(S32) = 8.493129000000001_rt;
    ebind_per_nucleon(Ar36) = 8.519909_rt;
    ebind_per_nucleon(Ca40) = 8.551303_rt;
    ebind_per_nucleon(Ti44) = 8.533520000000001_rt;
    ebind_per_nucleon(Cr48) = 8.572269_rt;
    ebind_per_nucleon(Mn51) = 8.633772_rt;
    ebind_per_nucleon(Mn55) = 8.765022_rt;
    ebind_per_nucleon(Fe52) = 8.609574_rt;
    ebind_per_nucleon(Fe53) = 8.648799_rt;
    ebind_per_nucleon(Fe54) = 8.736381999999999_rt;
    ebind_per_nucleon(Fe55) = 8.746595_rt;
    ebind_per_nucleon(Fe56) = 8.790353999999999_rt;
    ebind_per_nucleon(Co55) = 8.669618_rt;
    ebind_per_nucleon(Co56) = 8.694835999999999_rt;
    ebind_per_nucleon(Co57) = 8.741882_rt;
    ebind_per_nucleon(Ni56) = 8.642779_rt;
    ebind_per_nucleon(Ni57) = 8.670933000000002_rt;
    ebind_per_nucleon(Ni58) = 8.732059_rt;
    ebind_per_nucleon(Cu59) = 8.642_rt;
    ebind_per_nucleon(Zn60) = 8.58305_rt;

    // convert to binding energies per nucleus in MeV
    for (int i = 1; i <= NumSpec; ++i) {
        bion(i) = ebind_per_nucleon(i) * aion[i-1];
    }

    // Set the mass -- this will be in grams
    for (int i = 1; i <= NumSpec; ++i) {
        mion(i) = (aion[i-1] - zion[i-1]) * C::Legacy::m_n + zion[i-1] * (C::Legacy::m_p + C::Legacy::m_e) - bion(i) * C::Legacy::MeV2gr;
    }

}
