#ifndef actual_network_H
#define actual_network_H

#include <AMReX_REAL.H>
#include <AMReX_Array.H>

#include <fundamental_constants.H>
#include <network_properties.H>

using namespace amrex;

void actual_network_init();

const std::string network_name = "pynucastro-cxx";

namespace network
{
    extern AMREX_GPU_MANAGED amrex::Array1D<amrex::Real, 1, NumSpec> bion;
    extern AMREX_GPU_MANAGED amrex::Array1D<amrex::Real, 1, NumSpec> mion;
}

namespace Rates
{

    enum NetworkRates
    {
        k_p_c12_to_n13 = 1,
        k_he4_c12_to_o16 = 2,
        k_he4_n14_to_f18 = 3,
        k_he4_o16_to_ne20 = 4,
        k_he4_f18_to_na22 = 5,
        k_he4_ne20_to_mg24 = 6,
        k_p_ne21_to_na22 = 7,
        k_p_na23_to_mg24 = 8,
        k_he4_mg24_to_si28 = 9,
        k_p_al27_to_si28 = 10,
        k_he4_si28_to_s32 = 11,
        k_p_p31_to_s32 = 12,
        k_he4_cr48_to_fe52 = 13,
        k_p_mn51_to_fe52 = 14,
        k_he4_mn51_to_co55 = 15,
        k_he4_fe52_to_ni56 = 16,
        k_p_co55_to_ni56 = 17,
        k_he4_co55_to_cu59 = 18,
        k_he4_ni56_to_zn60 = 19,
        k_p_cu59_to_zn60 = 20,
        k_c12_c12_to_p_na23 = 21,
        k_c12_c12_to_he4_ne20 = 22,
        k_he4_n13_to_p_o16 = 23,
        k_c12_o16_to_p_al27 = 24,
        k_c12_o16_to_he4_mg24 = 25,
        k_o16_o16_to_p_p31 = 26,
        k_o16_o16_to_he4_si28 = 27,
        k_he4_f18_to_p_ne21 = 28,
        k_p_na23_to_he4_ne20 = 29,
        k_p_al27_to_he4_mg24 = 30,
        k_p_p31_to_he4_si28 = 31,
        k_he4_cr48_to_p_mn51 = 32,
        k_he4_fe52_to_p_co55 = 33,
        k_p_cu59_to_he4_ni56 = 34,
        k_he4_he4_he4_to_c12 = 35,
        k_c12_c12_to_mg24_modified = 36,
        k_o16_o16_to_s32_modified = 37,
        k_c12_o16_to_si28_modified = 38,
        k_n_to_p_weak_wc12 = 39,
        k_p_mn55_to_fe56 = 40,
        k_n_fe52_to_fe53 = 41,
        k_n_fe53_to_fe54 = 42,
        k_he4_fe53_to_ni57 = 43,
        k_n_fe54_to_fe55 = 44,
        k_p_fe54_to_co55 = 45,
        k_he4_fe54_to_ni58 = 46,
        k_n_fe55_to_fe56 = 47,
        k_p_fe55_to_co56 = 48,
        k_p_fe56_to_co57 = 49,
        k_n_co55_to_co56 = 50,
        k_n_co56_to_co57 = 51,
        k_p_co56_to_ni57 = 52,
        k_p_co57_to_ni58 = 53,
        k_n_ni56_to_ni57 = 54,
        k_n_ni57_to_ni58 = 55,
        k_p_ni58_to_cu59 = 56,
        k_he4_mn51_to_p_fe54 = 57,
        k_he4_fe53_to_p_co56 = 58,
        k_n_fe55_to_p_mn55 = 59,
        k_n_co55_to_p_fe55 = 60,
        k_he4_co55_to_p_ni58 = 61,
        k_n_co56_to_p_fe56 = 62,
        k_p_co57_to_he4_fe54 = 63,
        k_n_ni56_to_p_co56 = 64,
        k_n_ni56_to_he4_fe53 = 65,
        k_n_ni57_to_p_co57 = 66,
        k_n_ni57_to_he4_fe54 = 67,
        k_n_ni58_to_he4_fe55 = 68,
        k_n_cu59_to_he4_co56 = 69,
        k_n_zn60_to_he4_ni57 = 70,
        k_he4_s32_to_ar36_removed = 71,
        k_p_cl35_to_ar36_removed = 72,
        k_p_cl35_to_he4_s32_removed = 73,
        k_he4_ar36_to_ca40_removed = 74,
        k_p_k39_to_ca40_removed = 75,
        k_p_k39_to_he4_ar36_removed = 76,
        k_he4_ca40_to_ti44_removed = 77,
        k_p_sc43_to_ti44_removed = 78,
        k_p_sc43_to_he4_ca40_removed = 79,
        k_he4_ti44_to_cr48_removed = 80,
        k_he4_ti44_to_p_v47_removed = 81,
        k_p_v47_to_cr48_removed = 82,
        k_co55_to_fe55 = 83,
        k_co56_to_fe56 = 84,
        k_co56_to_ni56 = 85,
        k_co57_to_ni57 = 86,
        k_fe55_to_co55 = 87,
        k_fe55_to_mn55 = 88,
        k_fe56_to_co56 = 89,
        k_mn55_to_fe55 = 90,
        k_ni56_to_co56 = 91,
        k_ni57_to_co57 = 92,
        k_s32_he4_to_ar36_approx = 93,
        k_ar36_to_s32_he4_approx = 94,
        k_ar36_he4_to_ca40_approx = 95,
        k_ca40_to_ar36_he4_approx = 96,
        k_ca40_he4_to_ti44_approx = 97,
        k_ti44_to_ca40_he4_approx = 98,
        k_ti44_he4_to_cr48_approx = 99,
        k_cr48_to_ti44_he4_approx = 100,
        k_n13_to_p_c12_derived = 101,
        k_o16_to_he4_c12_derived = 102,
        k_f18_to_he4_n14_derived = 103,
        k_ne20_to_he4_o16_derived = 104,
        k_na22_to_p_ne21_derived = 105,
        k_na22_to_he4_f18_derived = 106,
        k_mg24_to_p_na23_derived = 107,
        k_mg24_to_he4_ne20_derived = 108,
        k_si28_to_p_al27_derived = 109,
        k_si28_to_he4_mg24_derived = 110,
        k_s32_to_p_p31_derived = 111,
        k_s32_to_he4_si28_derived = 112,
        k_fe52_to_p_mn51_derived = 113,
        k_fe52_to_he4_cr48_derived = 114,
        k_co55_to_he4_mn51_derived = 115,
        k_ni56_to_p_co55_derived = 116,
        k_ni56_to_he4_fe52_derived = 117,
        k_cu59_to_he4_co55_derived = 118,
        k_zn60_to_p_cu59_derived = 119,
        k_zn60_to_he4_ni56_derived = 120,
        k_c12_to_he4_he4_he4_derived = 121,
        k_p_o16_to_he4_n13_derived = 122,
        k_he4_ne20_to_p_na23_derived = 123,
        k_p_ne21_to_he4_f18_derived = 124,
        k_he4_mg24_to_p_al27_derived = 125,
        k_he4_si28_to_p_p31_derived = 126,
        k_p_mn51_to_he4_cr48_derived = 127,
        k_p_co55_to_he4_fe52_derived = 128,
        k_he4_ni56_to_p_cu59_derived = 129,
        k_fe53_to_n_fe52_derived = 130,
        k_fe54_to_n_fe53_derived = 131,
        k_fe55_to_n_fe54_derived = 132,
        k_fe56_to_n_fe55_derived = 133,
        k_fe56_to_p_mn55_derived = 134,
        k_co55_to_p_fe54_derived = 135,
        k_co56_to_n_co55_derived = 136,
        k_co56_to_p_fe55_derived = 137,
        k_co57_to_n_co56_derived = 138,
        k_co57_to_p_fe56_derived = 139,
        k_ni57_to_n_ni56_derived = 140,
        k_ni57_to_p_co56_derived = 141,
        k_ni57_to_he4_fe53_derived = 142,
        k_ni58_to_n_ni57_derived = 143,
        k_ni58_to_p_co57_derived = 144,
        k_ni58_to_he4_fe54_derived = 145,
        k_cu59_to_p_ni58_derived = 146,
        k_p_mn55_to_n_fe55_derived = 147,
        k_he4_fe53_to_n_ni56_derived = 148,
        k_p_fe54_to_he4_mn51_derived = 149,
        k_he4_fe54_to_n_ni57_derived = 150,
        k_he4_fe54_to_p_co57_derived = 151,
        k_p_fe55_to_n_co55_derived = 152,
        k_he4_fe55_to_n_ni58_derived = 153,
        k_p_fe56_to_n_co56_derived = 154,
        k_p_co56_to_n_ni56_derived = 155,
        k_p_co56_to_he4_fe53_derived = 156,
        k_he4_co56_to_n_cu59_derived = 157,
        k_p_co57_to_n_ni57_derived = 158,
        k_he4_ni57_to_n_zn60_derived = 159,
        k_p_ni58_to_he4_co55_derived = 160,
        k_he4_s32_to_p_cl35_derived_removed = 161,
        k_ar36_to_he4_s32_derived_removed = 162,
        k_ar36_to_p_cl35_derived_removed = 163,
        k_he4_ar36_to_p_k39_derived_removed = 164,
        k_ca40_to_he4_ar36_derived_removed = 165,
        k_ca40_to_p_k39_derived_removed = 166,
        k_he4_ca40_to_p_sc43_derived_removed = 167,
        k_ti44_to_he4_ca40_derived_removed = 168,
        k_ti44_to_p_sc43_derived_removed = 169,
        k_cr48_to_he4_ti44_derived_removed = 170,
        k_cr48_to_p_v47_derived_removed = 171,
        k_p_v47_to_he4_ti44_derived_removed = 172,
        NumRates = k_p_v47_to_he4_ti44_derived_removed
    };

    // number of reaclib rates

    const int NrateReaclib = 154;

    // number of tabular rates

    const int NrateTabular = 10;

    // rate names -- note: the rates are 1-based, not zero-based, so we pad
    // this vector with rate_names[0] = "" so the indices line up with the
    // NetworkRates enum

    static const std::vector<std::string> rate_names = {
        "",   // 0
        "p_c12_to_n13",  // 1,
        "he4_c12_to_o16",  // 2,
        "he4_n14_to_f18",  // 3,
        "he4_o16_to_ne20",  // 4,
        "he4_f18_to_na22",  // 5,
        "he4_ne20_to_mg24",  // 6,
        "p_ne21_to_na22",  // 7,
        "p_na23_to_mg24",  // 8,
        "he4_mg24_to_si28",  // 9,
        "p_al27_to_si28",  // 10,
        "he4_si28_to_s32",  // 11,
        "p_p31_to_s32",  // 12,
        "he4_cr48_to_fe52",  // 13,
        "p_mn51_to_fe52",  // 14,
        "he4_mn51_to_co55",  // 15,
        "he4_fe52_to_ni56",  // 16,
        "p_co55_to_ni56",  // 17,
        "he4_co55_to_cu59",  // 18,
        "he4_ni56_to_zn60",  // 19,
        "p_cu59_to_zn60",  // 20,
        "c12_c12_to_p_na23",  // 21,
        "c12_c12_to_he4_ne20",  // 22,
        "he4_n13_to_p_o16",  // 23,
        "c12_o16_to_p_al27",  // 24,
        "c12_o16_to_he4_mg24",  // 25,
        "o16_o16_to_p_p31",  // 26,
        "o16_o16_to_he4_si28",  // 27,
        "he4_f18_to_p_ne21",  // 28,
        "p_na23_to_he4_ne20",  // 29,
        "p_al27_to_he4_mg24",  // 30,
        "p_p31_to_he4_si28",  // 31,
        "he4_cr48_to_p_mn51",  // 32,
        "he4_fe52_to_p_co55",  // 33,
        "p_cu59_to_he4_ni56",  // 34,
        "he4_he4_he4_to_c12",  // 35,
        "c12_c12_to_mg24_modified",  // 36,
        "o16_o16_to_s32_modified",  // 37,
        "c12_o16_to_si28_modified",  // 38,
        "n_to_p_weak_wc12",  // 39,
        "p_mn55_to_fe56",  // 40,
        "n_fe52_to_fe53",  // 41,
        "n_fe53_to_fe54",  // 42,
        "he4_fe53_to_ni57",  // 43,
        "n_fe54_to_fe55",  // 44,
        "p_fe54_to_co55",  // 45,
        "he4_fe54_to_ni58",  // 46,
        "n_fe55_to_fe56",  // 47,
        "p_fe55_to_co56",  // 48,
        "p_fe56_to_co57",  // 49,
        "n_co55_to_co56",  // 50,
        "n_co56_to_co57",  // 51,
        "p_co56_to_ni57",  // 52,
        "p_co57_to_ni58",  // 53,
        "n_ni56_to_ni57",  // 54,
        "n_ni57_to_ni58",  // 55,
        "p_ni58_to_cu59",  // 56,
        "he4_mn51_to_p_fe54",  // 57,
        "he4_fe53_to_p_co56",  // 58,
        "n_fe55_to_p_mn55",  // 59,
        "n_co55_to_p_fe55",  // 60,
        "he4_co55_to_p_ni58",  // 61,
        "n_co56_to_p_fe56",  // 62,
        "p_co57_to_he4_fe54",  // 63,
        "n_ni56_to_p_co56",  // 64,
        "n_ni56_to_he4_fe53",  // 65,
        "n_ni57_to_p_co57",  // 66,
        "n_ni57_to_he4_fe54",  // 67,
        "n_ni58_to_he4_fe55",  // 68,
        "n_cu59_to_he4_co56",  // 69,
        "n_zn60_to_he4_ni57",  // 70,
        "he4_s32_to_ar36_removed",  // 71,
        "p_cl35_to_ar36_removed",  // 72,
        "p_cl35_to_he4_s32_removed",  // 73,
        "he4_ar36_to_ca40_removed",  // 74,
        "p_k39_to_ca40_removed",  // 75,
        "p_k39_to_he4_ar36_removed",  // 76,
        "he4_ca40_to_ti44_removed",  // 77,
        "p_sc43_to_ti44_removed",  // 78,
        "p_sc43_to_he4_ca40_removed",  // 79,
        "he4_ti44_to_cr48_removed",  // 80,
        "he4_ti44_to_p_v47_removed",  // 81,
        "p_v47_to_cr48_removed",  // 82,
        "co55_to_fe55",  // 83,
        "co56_to_fe56",  // 84,
        "co56_to_ni56",  // 85,
        "co57_to_ni57",  // 86,
        "fe55_to_co55",  // 87,
        "fe55_to_mn55",  // 88,
        "fe56_to_co56",  // 89,
        "mn55_to_fe55",  // 90,
        "ni56_to_co56",  // 91,
        "ni57_to_co57",  // 92,
        "s32_he4_to_ar36_approx",  // 93,
        "ar36_to_s32_he4_approx",  // 94,
        "ar36_he4_to_ca40_approx",  // 95,
        "ca40_to_ar36_he4_approx",  // 96,
        "ca40_he4_to_ti44_approx",  // 97,
        "ti44_to_ca40_he4_approx",  // 98,
        "ti44_he4_to_cr48_approx",  // 99,
        "cr48_to_ti44_he4_approx",  // 100,
        "n13_to_p_c12_derived",  // 101,
        "o16_to_he4_c12_derived",  // 102,
        "f18_to_he4_n14_derived",  // 103,
        "ne20_to_he4_o16_derived",  // 104,
        "na22_to_p_ne21_derived",  // 105,
        "na22_to_he4_f18_derived",  // 106,
        "mg24_to_p_na23_derived",  // 107,
        "mg24_to_he4_ne20_derived",  // 108,
        "si28_to_p_al27_derived",  // 109,
        "si28_to_he4_mg24_derived",  // 110,
        "s32_to_p_p31_derived",  // 111,
        "s32_to_he4_si28_derived",  // 112,
        "fe52_to_p_mn51_derived",  // 113,
        "fe52_to_he4_cr48_derived",  // 114,
        "co55_to_he4_mn51_derived",  // 115,
        "ni56_to_p_co55_derived",  // 116,
        "ni56_to_he4_fe52_derived",  // 117,
        "cu59_to_he4_co55_derived",  // 118,
        "zn60_to_p_cu59_derived",  // 119,
        "zn60_to_he4_ni56_derived",  // 120,
        "c12_to_he4_he4_he4_derived",  // 121,
        "p_o16_to_he4_n13_derived",  // 122,
        "he4_ne20_to_p_na23_derived",  // 123,
        "p_ne21_to_he4_f18_derived",  // 124,
        "he4_mg24_to_p_al27_derived",  // 125,
        "he4_si28_to_p_p31_derived",  // 126,
        "p_mn51_to_he4_cr48_derived",  // 127,
        "p_co55_to_he4_fe52_derived",  // 128,
        "he4_ni56_to_p_cu59_derived",  // 129,
        "fe53_to_n_fe52_derived",  // 130,
        "fe54_to_n_fe53_derived",  // 131,
        "fe55_to_n_fe54_derived",  // 132,
        "fe56_to_n_fe55_derived",  // 133,
        "fe56_to_p_mn55_derived",  // 134,
        "co55_to_p_fe54_derived",  // 135,
        "co56_to_n_co55_derived",  // 136,
        "co56_to_p_fe55_derived",  // 137,
        "co57_to_n_co56_derived",  // 138,
        "co57_to_p_fe56_derived",  // 139,
        "ni57_to_n_ni56_derived",  // 140,
        "ni57_to_p_co56_derived",  // 141,
        "ni57_to_he4_fe53_derived",  // 142,
        "ni58_to_n_ni57_derived",  // 143,
        "ni58_to_p_co57_derived",  // 144,
        "ni58_to_he4_fe54_derived",  // 145,
        "cu59_to_p_ni58_derived",  // 146,
        "p_mn55_to_n_fe55_derived",  // 147,
        "he4_fe53_to_n_ni56_derived",  // 148,
        "p_fe54_to_he4_mn51_derived",  // 149,
        "he4_fe54_to_n_ni57_derived",  // 150,
        "he4_fe54_to_p_co57_derived",  // 151,
        "p_fe55_to_n_co55_derived",  // 152,
        "he4_fe55_to_n_ni58_derived",  // 153,
        "p_fe56_to_n_co56_derived",  // 154,
        "p_co56_to_n_ni56_derived",  // 155,
        "p_co56_to_he4_fe53_derived",  // 156,
        "he4_co56_to_n_cu59_derived",  // 157,
        "p_co57_to_n_ni57_derived",  // 158,
        "he4_ni57_to_n_zn60_derived",  // 159,
        "p_ni58_to_he4_co55_derived",  // 160,
        "he4_s32_to_p_cl35_derived_removed",  // 161,
        "ar36_to_he4_s32_derived_removed",  // 162,
        "ar36_to_p_cl35_derived_removed",  // 163,
        "he4_ar36_to_p_k39_derived_removed",  // 164,
        "ca40_to_he4_ar36_derived_removed",  // 165,
        "ca40_to_p_k39_derived_removed",  // 166,
        "he4_ca40_to_p_sc43_derived_removed",  // 167,
        "ti44_to_he4_ca40_derived_removed",  // 168,
        "ti44_to_p_sc43_derived_removed",  // 169,
        "cr48_to_he4_ti44_derived_removed",  // 170,
        "cr48_to_p_v47_derived_removed",  // 171,
        "p_v47_to_he4_ti44_derived_removed"  // 172,
    };

}

#ifdef NSE_NET
namespace NSE_INDEX
{
    constexpr int h1_index = 1;
    constexpr int n_index = 0;
    constexpr int he4_index = 2;

    // Each row corresponds to the rate in NetworkRates enum
    // First 3 row indices for reactants, followed by 3 product indices
    // last index is the corresponding reverse rate index.

    extern AMREX_GPU_MANAGED amrex::Array2D<int, 1, Rates::NumRates, 1, 7, Order::C> rate_indices;
}
#endif

#endif
