#ifndef actual_network_H
#define actual_network_H

#include <AMReX_REAL.H>
#include <AMReX_Array.H>

#include <fundamental_constants.H>
#include <network_properties.H>

using namespace amrex;

void actual_network_init();

const std::string network_name = "pynucastro-cxx";

namespace network
{
    extern AMREX_GPU_MANAGED amrex::Array1D<amrex::Real, 1, NumSpec> bion;
    extern AMREX_GPU_MANAGED amrex::Array1D<amrex::Real, 1, NumSpec> mion;
}

namespace Rates
{

    enum NetworkRates
    {
        k_n13_to_p_c12 = 1,
        k_o16_to_he4_c12 = 2,
        k_f18_to_he4_n14 = 3,
        k_ne20_to_he4_o16 = 4,
        k_na22_to_p_ne21 = 5,
        k_na22_to_he4_f18 = 6,
        k_mg24_to_p_na23 = 7,
        k_mg24_to_he4_ne20 = 8,
        k_al27_to_he4_na23 = 9,
        k_si28_to_p_al27 = 10,
        k_si28_to_he4_mg24 = 11,
        k_p31_to_he4_al27 = 12,
        k_s32_to_p_p31 = 13,
        k_s32_to_he4_si28 = 14,
        k_fe52_to_p_mn51 = 15,
        k_fe52_to_he4_cr48 = 16,
        k_co55_to_he4_mn51 = 17,
        k_ni56_to_p_co55 = 18,
        k_ni56_to_he4_fe52 = 19,
        k_cu59_to_he4_co55 = 20,
        k_zn60_to_p_cu59 = 21,
        k_zn60_to_he4_ni56 = 22,
        k_c12_to_he4_he4_he4 = 23,
        k_p_c12_to_n13 = 24,
        k_he4_c12_to_o16 = 25,
        k_he4_n14_to_f18 = 26,
        k_he4_o16_to_ne20 = 27,
        k_he4_f18_to_na22 = 28,
        k_he4_ne20_to_mg24 = 29,
        k_p_ne21_to_na22 = 30,
        k_p_na23_to_mg24 = 31,
        k_he4_na23_to_al27 = 32,
        k_he4_mg24_to_si28 = 33,
        k_p_al27_to_si28 = 34,
        k_he4_al27_to_p31 = 35,
        k_he4_si28_to_s32 = 36,
        k_p_p31_to_s32 = 37,
        k_he4_cr48_to_fe52 = 38,
        k_p_mn51_to_fe52 = 39,
        k_he4_mn51_to_co55 = 40,
        k_he4_fe52_to_ni56 = 41,
        k_p_co55_to_ni56 = 42,
        k_he4_co55_to_cu59 = 43,
        k_he4_ni56_to_zn60 = 44,
        k_p_cu59_to_zn60 = 45,
        k_c12_c12_to_p_na23 = 46,
        k_c12_c12_to_he4_ne20 = 47,
        k_he4_n13_to_p_o16 = 48,
        k_p_o16_to_he4_n13 = 49,
        k_c12_o16_to_p_al27 = 50,
        k_c12_o16_to_he4_mg24 = 51,
        k_o16_o16_to_p_p31 = 52,
        k_o16_o16_to_he4_si28 = 53,
        k_he4_f18_to_p_ne21 = 54,
        k_he4_ne20_to_p_na23 = 55,
        k_he4_ne20_to_c12_c12 = 56,
        k_c12_ne20_to_p_p31 = 57,
        k_c12_ne20_to_he4_si28 = 58,
        k_p_ne21_to_he4_f18 = 59,
        k_p_na23_to_he4_ne20 = 60,
        k_p_na23_to_c12_c12 = 61,
        k_he4_mg24_to_p_al27 = 62,
        k_he4_mg24_to_c12_o16 = 63,
        k_p_al27_to_he4_mg24 = 64,
        k_p_al27_to_c12_o16 = 65,
        k_he4_si28_to_p_p31 = 66,
        k_he4_si28_to_c12_ne20 = 67,
        k_he4_si28_to_o16_o16 = 68,
        k_p_p31_to_he4_si28 = 69,
        k_p_p31_to_c12_ne20 = 70,
        k_p_p31_to_o16_o16 = 71,
        k_he4_cr48_to_p_mn51 = 72,
        k_p_mn51_to_he4_cr48 = 73,
        k_he4_fe52_to_p_co55 = 74,
        k_p_co55_to_he4_fe52 = 75,
        k_he4_ni56_to_p_cu59 = 76,
        k_p_cu59_to_he4_ni56 = 77,
        k_he4_he4_he4_to_c12 = 78,
        k_c12_c12_to_mg24_modified = 79,
        k_o16_o16_to_s32_modified = 80,
        k_c12_o16_to_si28_modified = 81,
        k_n_to_p_weak_wc12 = 82,
        k_fe53_to_n_fe52 = 83,
        k_fe54_to_n_fe53 = 84,
        k_fe55_to_n_fe54 = 85,
        k_fe56_to_n_fe55 = 86,
        k_co55_to_p_fe54 = 87,
        k_co56_to_n_co55 = 88,
        k_co56_to_p_fe55 = 89,
        k_co57_to_n_co56 = 90,
        k_co57_to_p_fe56 = 91,
        k_ni57_to_n_ni56 = 92,
        k_ni57_to_p_co56 = 93,
        k_ni57_to_he4_fe53 = 94,
        k_ni58_to_n_ni57 = 95,
        k_ni58_to_p_co57 = 96,
        k_ni58_to_he4_fe54 = 97,
        k_cu59_to_p_ni58 = 98,
        k_n_fe52_to_fe53 = 99,
        k_n_fe53_to_fe54 = 100,
        k_he4_fe53_to_ni57 = 101,
        k_n_fe54_to_fe55 = 102,
        k_p_fe54_to_co55 = 103,
        k_he4_fe54_to_ni58 = 104,
        k_n_fe55_to_fe56 = 105,
        k_p_fe55_to_co56 = 106,
        k_p_fe56_to_co57 = 107,
        k_n_co55_to_co56 = 108,
        k_n_co56_to_co57 = 109,
        k_p_co56_to_ni57 = 110,
        k_p_co57_to_ni58 = 111,
        k_n_ni56_to_ni57 = 112,
        k_n_ni57_to_ni58 = 113,
        k_p_ni58_to_cu59 = 114,
        k_he4_mn51_to_p_fe54 = 115,
        k_he4_fe53_to_n_ni56 = 116,
        k_he4_fe53_to_p_co56 = 117,
        k_p_fe54_to_he4_mn51 = 118,
        k_he4_fe54_to_n_ni57 = 119,
        k_he4_fe54_to_p_co57 = 120,
        k_p_fe55_to_n_co55 = 121,
        k_he4_fe55_to_n_ni58 = 122,
        k_p_fe56_to_n_co56 = 123,
        k_n_co55_to_p_fe55 = 124,
        k_he4_co55_to_p_ni58 = 125,
        k_n_co56_to_p_fe56 = 126,
        k_p_co56_to_n_ni56 = 127,
        k_p_co56_to_he4_fe53 = 128,
        k_he4_co56_to_n_cu59 = 129,
        k_p_co57_to_n_ni57 = 130,
        k_p_co57_to_he4_fe54 = 131,
        k_n_ni56_to_p_co56 = 132,
        k_n_ni56_to_he4_fe53 = 133,
        k_n_ni57_to_p_co57 = 134,
        k_n_ni57_to_he4_fe54 = 135,
        k_he4_ni57_to_n_zn60 = 136,
        k_n_ni58_to_he4_fe55 = 137,
        k_p_ni58_to_he4_co55 = 138,
        k_n_cu59_to_he4_co56 = 139,
        k_n_zn60_to_he4_ni57 = 140,
        k_he4_s32_to_ar36_removed = 141,
        k_he4_s32_to_p_cl35_removed = 142,
        k_p_cl35_to_ar36_removed = 143,
        k_ar36_to_he4_s32_removed = 144,
        k_ar36_to_p_cl35_removed = 145,
        k_p_cl35_to_he4_s32_removed = 146,
        k_he4_ar36_to_ca40_removed = 147,
        k_he4_ar36_to_p_k39_removed = 148,
        k_p_k39_to_ca40_removed = 149,
        k_ca40_to_he4_ar36_removed = 150,
        k_ca40_to_p_k39_removed = 151,
        k_p_k39_to_he4_ar36_removed = 152,
        k_he4_ca40_to_ti44_removed = 153,
        k_he4_ca40_to_p_sc43_removed = 154,
        k_p_sc43_to_ti44_removed = 155,
        k_ti44_to_he4_ca40_removed = 156,
        k_ti44_to_p_sc43_removed = 157,
        k_p_sc43_to_he4_ca40_removed = 158,
        k_he4_ti44_to_cr48_removed = 159,
        k_he4_ti44_to_p_v47_removed = 160,
        k_p_v47_to_cr48_removed = 161,
        k_cr48_to_he4_ti44_removed = 162,
        k_cr48_to_p_v47_removed = 163,
        k_p_v47_to_he4_ti44_removed = 164,
        k_co55_to_fe55 = 165,
        k_co56_to_fe56 = 166,
        k_co56_to_ni56 = 167,
        k_co57_to_ni57 = 168,
        k_fe55_to_co55 = 169,
        k_fe56_to_co56 = 170,
        k_ni56_to_co56 = 171,
        k_ni57_to_co57 = 172,
        k_s32_he4_to_ar36_approx = 173,
        k_ar36_to_s32_he4_approx = 174,
        k_ar36_he4_to_ca40_approx = 175,
        k_ca40_to_ar36_he4_approx = 176,
        k_ca40_he4_to_ti44_approx = 177,
        k_ti44_to_ca40_he4_approx = 178,
        k_ti44_he4_to_cr48_approx = 179,
        k_cr48_to_ti44_he4_approx = 180,
        NumRates = k_cr48_to_ti44_he4_approx
    };

    // number of reaclib rates

    const int NrateReaclib = 164;

    // number of tabular rates

    const int NrateTabular = 8;

    // rate names -- note: the rates are 1-based, not zero-based, so we pad
    // this vector with rate_names[0] = "" so the indices line up with the
    // NetworkRates enum

    static const std::vector<std::string> rate_names = {
        "",   // 0
        "n13_to_p_c12",  // 1,
        "o16_to_he4_c12",  // 2,
        "f18_to_he4_n14",  // 3,
        "ne20_to_he4_o16",  // 4,
        "na22_to_p_ne21",  // 5,
        "na22_to_he4_f18",  // 6,
        "mg24_to_p_na23",  // 7,
        "mg24_to_he4_ne20",  // 8,
        "al27_to_he4_na23",  // 9,
        "si28_to_p_al27",  // 10,
        "si28_to_he4_mg24",  // 11,
        "p31_to_he4_al27",  // 12,
        "s32_to_p_p31",  // 13,
        "s32_to_he4_si28",  // 14,
        "fe52_to_p_mn51",  // 15,
        "fe52_to_he4_cr48",  // 16,
        "co55_to_he4_mn51",  // 17,
        "ni56_to_p_co55",  // 18,
        "ni56_to_he4_fe52",  // 19,
        "cu59_to_he4_co55",  // 20,
        "zn60_to_p_cu59",  // 21,
        "zn60_to_he4_ni56",  // 22,
        "c12_to_he4_he4_he4",  // 23,
        "p_c12_to_n13",  // 24,
        "he4_c12_to_o16",  // 25,
        "he4_n14_to_f18",  // 26,
        "he4_o16_to_ne20",  // 27,
        "he4_f18_to_na22",  // 28,
        "he4_ne20_to_mg24",  // 29,
        "p_ne21_to_na22",  // 30,
        "p_na23_to_mg24",  // 31,
        "he4_na23_to_al27",  // 32,
        "he4_mg24_to_si28",  // 33,
        "p_al27_to_si28",  // 34,
        "he4_al27_to_p31",  // 35,
        "he4_si28_to_s32",  // 36,
        "p_p31_to_s32",  // 37,
        "he4_cr48_to_fe52",  // 38,
        "p_mn51_to_fe52",  // 39,
        "he4_mn51_to_co55",  // 40,
        "he4_fe52_to_ni56",  // 41,
        "p_co55_to_ni56",  // 42,
        "he4_co55_to_cu59",  // 43,
        "he4_ni56_to_zn60",  // 44,
        "p_cu59_to_zn60",  // 45,
        "c12_c12_to_p_na23",  // 46,
        "c12_c12_to_he4_ne20",  // 47,
        "he4_n13_to_p_o16",  // 48,
        "p_o16_to_he4_n13",  // 49,
        "c12_o16_to_p_al27",  // 50,
        "c12_o16_to_he4_mg24",  // 51,
        "o16_o16_to_p_p31",  // 52,
        "o16_o16_to_he4_si28",  // 53,
        "he4_f18_to_p_ne21",  // 54,
        "he4_ne20_to_p_na23",  // 55,
        "he4_ne20_to_c12_c12",  // 56,
        "c12_ne20_to_p_p31",  // 57,
        "c12_ne20_to_he4_si28",  // 58,
        "p_ne21_to_he4_f18",  // 59,
        "p_na23_to_he4_ne20",  // 60,
        "p_na23_to_c12_c12",  // 61,
        "he4_mg24_to_p_al27",  // 62,
        "he4_mg24_to_c12_o16",  // 63,
        "p_al27_to_he4_mg24",  // 64,
        "p_al27_to_c12_o16",  // 65,
        "he4_si28_to_p_p31",  // 66,
        "he4_si28_to_c12_ne20",  // 67,
        "he4_si28_to_o16_o16",  // 68,
        "p_p31_to_he4_si28",  // 69,
        "p_p31_to_c12_ne20",  // 70,
        "p_p31_to_o16_o16",  // 71,
        "he4_cr48_to_p_mn51",  // 72,
        "p_mn51_to_he4_cr48",  // 73,
        "he4_fe52_to_p_co55",  // 74,
        "p_co55_to_he4_fe52",  // 75,
        "he4_ni56_to_p_cu59",  // 76,
        "p_cu59_to_he4_ni56",  // 77,
        "he4_he4_he4_to_c12",  // 78,
        "c12_c12_to_mg24_modified",  // 79,
        "o16_o16_to_s32_modified",  // 80,
        "c12_o16_to_si28_modified",  // 81,
        "n_to_p_weak_wc12",  // 82,
        "fe53_to_n_fe52",  // 83,
        "fe54_to_n_fe53",  // 84,
        "fe55_to_n_fe54",  // 85,
        "fe56_to_n_fe55",  // 86,
        "co55_to_p_fe54",  // 87,
        "co56_to_n_co55",  // 88,
        "co56_to_p_fe55",  // 89,
        "co57_to_n_co56",  // 90,
        "co57_to_p_fe56",  // 91,
        "ni57_to_n_ni56",  // 92,
        "ni57_to_p_co56",  // 93,
        "ni57_to_he4_fe53",  // 94,
        "ni58_to_n_ni57",  // 95,
        "ni58_to_p_co57",  // 96,
        "ni58_to_he4_fe54",  // 97,
        "cu59_to_p_ni58",  // 98,
        "n_fe52_to_fe53",  // 99,
        "n_fe53_to_fe54",  // 100,
        "he4_fe53_to_ni57",  // 101,
        "n_fe54_to_fe55",  // 102,
        "p_fe54_to_co55",  // 103,
        "he4_fe54_to_ni58",  // 104,
        "n_fe55_to_fe56",  // 105,
        "p_fe55_to_co56",  // 106,
        "p_fe56_to_co57",  // 107,
        "n_co55_to_co56",  // 108,
        "n_co56_to_co57",  // 109,
        "p_co56_to_ni57",  // 110,
        "p_co57_to_ni58",  // 111,
        "n_ni56_to_ni57",  // 112,
        "n_ni57_to_ni58",  // 113,
        "p_ni58_to_cu59",  // 114,
        "he4_mn51_to_p_fe54",  // 115,
        "he4_fe53_to_n_ni56",  // 116,
        "he4_fe53_to_p_co56",  // 117,
        "p_fe54_to_he4_mn51",  // 118,
        "he4_fe54_to_n_ni57",  // 119,
        "he4_fe54_to_p_co57",  // 120,
        "p_fe55_to_n_co55",  // 121,
        "he4_fe55_to_n_ni58",  // 122,
        "p_fe56_to_n_co56",  // 123,
        "n_co55_to_p_fe55",  // 124,
        "he4_co55_to_p_ni58",  // 125,
        "n_co56_to_p_fe56",  // 126,
        "p_co56_to_n_ni56",  // 127,
        "p_co56_to_he4_fe53",  // 128,
        "he4_co56_to_n_cu59",  // 129,
        "p_co57_to_n_ni57",  // 130,
        "p_co57_to_he4_fe54",  // 131,
        "n_ni56_to_p_co56",  // 132,
        "n_ni56_to_he4_fe53",  // 133,
        "n_ni57_to_p_co57",  // 134,
        "n_ni57_to_he4_fe54",  // 135,
        "he4_ni57_to_n_zn60",  // 136,
        "n_ni58_to_he4_fe55",  // 137,
        "p_ni58_to_he4_co55",  // 138,
        "n_cu59_to_he4_co56",  // 139,
        "n_zn60_to_he4_ni57",  // 140,
        "he4_s32_to_ar36_removed",  // 141,
        "he4_s32_to_p_cl35_removed",  // 142,
        "p_cl35_to_ar36_removed",  // 143,
        "ar36_to_he4_s32_removed",  // 144,
        "ar36_to_p_cl35_removed",  // 145,
        "p_cl35_to_he4_s32_removed",  // 146,
        "he4_ar36_to_ca40_removed",  // 147,
        "he4_ar36_to_p_k39_removed",  // 148,
        "p_k39_to_ca40_removed",  // 149,
        "ca40_to_he4_ar36_removed",  // 150,
        "ca40_to_p_k39_removed",  // 151,
        "p_k39_to_he4_ar36_removed",  // 152,
        "he4_ca40_to_ti44_removed",  // 153,
        "he4_ca40_to_p_sc43_removed",  // 154,
        "p_sc43_to_ti44_removed",  // 155,
        "ti44_to_he4_ca40_removed",  // 156,
        "ti44_to_p_sc43_removed",  // 157,
        "p_sc43_to_he4_ca40_removed",  // 158,
        "he4_ti44_to_cr48_removed",  // 159,
        "he4_ti44_to_p_v47_removed",  // 160,
        "p_v47_to_cr48_removed",  // 161,
        "cr48_to_he4_ti44_removed",  // 162,
        "cr48_to_p_v47_removed",  // 163,
        "p_v47_to_he4_ti44_removed",  // 164,
        "co55_to_fe55",  // 165,
        "co56_to_fe56",  // 166,
        "co56_to_ni56",  // 167,
        "co57_to_ni57",  // 168,
        "fe55_to_co55",  // 169,
        "fe56_to_co56",  // 170,
        "ni56_to_co56",  // 171,
        "ni57_to_co57",  // 172,
        "s32_he4_to_ar36_approx",  // 173,
        "ar36_to_s32_he4_approx",  // 174,
        "ar36_he4_to_ca40_approx",  // 175,
        "ca40_to_ar36_he4_approx",  // 176,
        "ca40_he4_to_ti44_approx",  // 177,
        "ti44_to_ca40_he4_approx",  // 178,
        "ti44_he4_to_cr48_approx",  // 179,
        "cr48_to_ti44_he4_approx"  // 180,
    };

}

#ifdef NSE_NET
namespace NSE_INDEX
{
    constexpr int h1_index = 1;
    constexpr int n_index = 0;
    constexpr int he4_index = 2;

    // Each row corresponds to the rate in NetworkRates enum
    // First 3 row indices for reactants, followed by 3 product indices
    // last index is the corresponding reverse rate index.

    extern AMREX_GPU_MANAGED amrex::Array2D<int, 1, Rates::NumRates, 1, 7, Order::C> rate_indices;
}
#endif

#endif
