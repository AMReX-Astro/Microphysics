ifeq ($(USE_FORT_NETWORK), TRUE)
  F90EXE_sources += actual_network.F90
  ifeq ($(USE_REACT),TRUE)
    F90EXE_sources += actual_rhs.F90
  endif
endif
CEXE_headers += network_properties.H


$(NETWORK_OUTPUT_PATH)/actual_network.F90: $(NETWORK_OUTPUT_PATH)/network_properties.H

ifeq ($(USE_FORT_NETWORK), TRUE)
  NETWORK_TEMPLATE := $(MICROPHYSICS_HOME)/networks/general_null/network.template
  fort_opts := -t $(NETWORK_TEMPLATE) -o $(NETWORK_OUTPUT_PATH)/actual_network.F90
else
  NETWORK_TEMPLATE :=
  fort_opts :=
endif

$(NETWORK_OUTPUT_PATH)/network_properties.H: $(GENERAL_NET_INPUTS) $(strip $(NETWORK_TEMPLATE))
	@echo " "
	@echo "---------------------------------------------------------------------------"
	@echo "WRITING network files:"
	@if [ ! -d $(NETWORK_OUTPUT_PATH) ]; then mkdir -p $(NETWORK_OUTPUT_PATH); fi
	$(MICROPHYSICS_HOME)/networks/general_null/write_network.py $(fort_opts) \
            -s $(GENERAL_NET_INPUTS) \
            --other_properties $(MICROPHYSICS_HOME)/networks/general_null/NETWORK_PROPERTIES \
            --header_template $(MICROPHYSICS_HOME)/networks/general_null/network_header.template \
            --header_output $(NETWORK_OUTPUT_PATH)/network_properties.H \
            --defines "$(DEFINES)"
	@echo "---------------------------------------------------------------------------"
	@echo " "


# remove actual_network.F90 for 'make clean' and therefore 'make realclean'
clean::
	$(RM) actual_network.F90 actual_network.f90 network_properties.H
